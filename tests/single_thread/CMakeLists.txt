PROJECT(single_thread)

SET(QT_USE_QTNETWORK TRUE)
SET(QT_USE_QTSCRIPT TRUE)
SET(CMAKE_BUILD_TYPE Release)
SET(CMAKE_AUTOMOC ON)

if(QT5_BUILD)
  find_package(Qt5Core REQUIRED)
  find_package(Qt5Widgets REQUIRED)
  find_package(Qt5Multimedia REQUIRED)
  find_package(Qt5Xml REQUIRED)
  find_package(Qt5Gui REQUIRED)
  find_package(Qt5Network REQUIRED)
  set(QT_INCLUDES ${Qt5Gui_INCLUDE_DIRS} ${Qt5Widgets_INCLUDE_DIRS} ${Qt5Network_INCLUDE_DIRS})
  include_directories(${QT_INCLUDES})
else()
  find_package(Qt4 REQUIRED)
endif()

file (GLOB ui "*.ui")
file (GLOB headers "*.h" "*/*.h")
file (GLOB src "*.cpp" "*/*.cpp")
file (GLOB resources "*.qrc")

if(QT5_BUILD)
    QT5_WRAP_CPP(single_thread_HEADERS_MOC ${single_thread_HEADERS})
    QT5_WRAP_UI(single_thread_FORMS_HEADERS ${ui})
    QT5_ADD_RESOURCES(single_thread_RESOURCES_RCC ${resources})
else()
    QT4_WRAP_CPP(single_thread_HEADERS_MOC ${single_thread_HEADERS})
    QT4_WRAP_UI(single_thread_FORMS_HEADERS ${ui})
    QT4_ADD_RESOURCES(single_thread_RESOURCES_RCC ${resources})
endif()

if (NOT QT5_BUILD)
  INCLUDE(${QT_USE_FILE})
endif()

ADD_DEFINITIONS(${QT_DEFINITIONS})
ADD_DEFINITIONS( -DQT_USE_QSTRINGBUILDER )

ADD_EXECUTABLE(single_thread ${src} ${single_thread_HEADERS_MOC} ${headers} ${single_thread_RESOURCES_RCC} ${single_thread_FORMS_HEADERS})
if (QT5_BUILD)
    TARGET_LINK_LIBRARIES(single_thread Qt5::Core Qt5::Multimedia Qt5::Gui Qt5::Widgets Qt5::Xml)
endif()
TARGET_LINK_LIBRARIES(single_thread pixelengine ${QT_LIBRARIES})
if (NOT WIN32)
    INSTALL(TARGETS single_thread RUNTIME DESTINATION bin)
endif()
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})
INCLUDE_DIRECTORIES("../../src/")
